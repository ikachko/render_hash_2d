{"version":3,"sources":["../../lib/rex.js"],"names":["verify","require","a","ert","_","TYPE_AND_LEN","exports","matchType","str","isString","match","exec","name","length","FUNC","matchFunction","resultType","isCallback","indexOf","trim","args","split","BEGIN_FIELDS","END_FIELDS","matchFields","keyword","regExp","RegExp","content","parts","ARRAY_DECL","matchArrayDeclaration","Number","defBody","TYPE","stars"],"mappings":"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","file":"rex.js","sourcesContent":["/*\nCopyright 2016 Gábor Mező (gabor.mezo@outlook.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n'use strict';\nconst verify = require('./verify');\nconst a = verify.a;\nconst ert = verify.ert;\nconst _ = require('lodash');\n\nconst TYPE_AND_LEN = /^\\s*([\\w_][\\w\\d_]*)\\s*(?:\\[\\s*(\\d+)\\s*\\])?\\s*$/;\n\nexports.matchType = function (str) {\n    a&&ert(_.isString(str));\n\n    const match = TYPE_AND_LEN.exec(str);\n    if (!match) {\n        return null;\n    }\n    return {\n        name: match[1],\n        length: match[2] || null\n    };\n};\n\nconst FUNC = /^\\s*([\\w_][\\w\\d_]*\\s*\\**)\\s*((?:\\s*\\(\\s*\\*\\s*)?([\\w_][\\w\\d_]*)(?:\\s*\\)\\s*)?)\\s*\\((.*)\\)\\s*$/;\n\nexports.matchFunction = function (str) {\n    a&&ert(_.isString(str));\n\n    const match = FUNC.exec(str);\n    if (match && match.length === 5) {\n        const resultType = match[1];\n        const isCallback = match[2].indexOf('*') >= 0;\n        const name = match[3].trim();\n        let args = match[4].trim();\n        args = args ? args.split(',') : [];\n        return {\n            name,\n            isCallback,\n            args,\n            resultType\n        };\n    }\n    return null;\n};\n\nconst BEGIN_FIELDS = '^\\\\s*';\nconst END_FIELDS = '\\\\s*([\\\\w_][\\\\w\\\\d_]*)\\\\s*{(.*)}\\s*$';\n\nexports.matchFields = function (keyword, str) {\n    a&&ert(_.isString(keyword));\n    a&&ert(_.isString(str));\n\n    const regExp = new RegExp(BEGIN_FIELDS + keyword + END_FIELDS);\n    const match = regExp.exec(str);\n    if (match && match.length === 3) {\n        const name = match[1];\n        const content = match[2];\n        const parts = content.split(';');\n        return { name, parts };\n    }\n    return null;\n};\n\nconst ARRAY_DECL = /^\\s*([\\w_][\\w\\d_]*[\\s\\*]*)\\s*\\[\\s*(\\d*)\\s*\\]\\s*([\\w_][\\w\\d_]*)\\s*$/;\n\nexports.matchArrayDeclaration = function (str) {\n    a&&ert(_.isString(str));\n\n    const match = ARRAY_DECL.exec(str);\n    if (match && match.length === 4) {\n        return {\n            name: match[3],\n            length: Number(match[2]),\n            defBody: match[1]\n        };\n    }\n    return null;\n};\n\nconst TYPE = /(([\\w_][\\w\\d_]*)\\s*(?:\\[\\s*(\\d+)\\s*\\])?)([\\s\\*]*)/;\n\nexports.matchType = function (str) {\n    a&&ert(_.isString(str));\n\n    const match = TYPE.exec(str);\n    if (match && match.length === 5) {\n        return {\n            name: match[2],\n            length: match[3],\n            stars: match[4]\n        };\n    }\n    return null;\n};"]}