{"version":3,"sources":["../../lib/Library.js"],"names":["_","require","native","assert","Promise","async","coroutine","fs","promisifyAll","path","defs","FastFunction","FastCallback","FastStruct","FastUnion","FastArray","verify","a","ert","queue","NameFactory","Parser","defaultOptions","defaultCallMode","callMode","sync","syncMode","none","vmSize","Library","options","isString","length","Object","freeze","defaults","_pLib","_initialized","_released","_loop","_mutex","_queue","_nameFactory","functions","callbacks","structs","unions","arrays","interface","dynload","loadLibrary","callback","newLoop","lock","mutex","newMutex","Buffer","values","func","release","freeLoop","freeLibrary","name","initialize","Boolean","findSymbol","str","parseMultiline","def","syncFunction","asyncFunction","_addFunction","_addCallback","_addStruct","_addUnion","_addArray","type","getFunction","cb","getFactory","struct","union","array","unlock","f","next","prefix","makeName","moduleDir","doFind","module","exports","rootDir","join","findIn","libPath","Error","subDir","dir","files","readdirAsync","rex","RegExp","file","test"],"mappings":"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","file":"Library.js","sourcesContent":["/*\nCopyright 2016 Gábor Mező (gabor.mezo@outlook.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n'use strict';\nconst _ = require('lodash');\nconst native = require('./native');\nconst assert = require('assert');\nconst Promise = require('bluebird');\nconst async = Promise.coroutine;\nconst fs = Promise.promisifyAll(require('fs'));\nconst path = require('path');\nconst defs = require('./defs');\nconst FastFunction = require('./FastFunction');\nconst FastCallback = require('./FastCallback');\nconst FastStruct = require('./FastStruct');\nconst FastUnion = require('./FastUnion');\nconst FastArray = require('./FastArray');\nconst verify = require('./verify');\nconst a = verify.a;\nconst ert = verify.ert;\nconst queue = require('./queue');\nconst NameFactory = require('./NameFactory');\nconst Parser = require('./Parser');\n\nconst defaultOptions = {\n    defaultCallMode: defs.callMode.sync,\n    syncMode: defs.syncMode.none,\n    vmSize: 512\n};\n\nclass Library {\n    constructor(path, options) {\n        assert(_.isString(path) && path.length, 'Argument \"path\" should be a non-empty string.');\n        this.path = path;\n        this.options = Object.freeze(_.defaults(options, defaultOptions));\n        assert(this.options.defaultCallMode === defs.callMode.sync ||\n            this.options.defaultCallMode === defs.callMode.async,\n            '\"options.callMode\" is invalid.');\n        assert(this.options.syncMode >= defs.syncMode.none && this.options.syncMode <= defs.syncMode.queue,\n            '\"options.syncMode\" is invalid.');\n        this._pLib = null;\n        this._initialized = false;\n        this._released = false;\n        this._loop = null;\n        this._mutex = null;\n        this._queue = null;\n        this._nameFactory = new NameFactory();\n        this.functions = {};\n        this.callbacks = {};\n        this.structs = {};\n        this.unions = {};\n        this.arrays = {};\n        this.interface = {};\n    }\n\n    get synchronized() {\n        return this.options.syncMode === defs.syncMode.lock;\n    }\n\n    get queued() {\n        return this.options.syncMode === defs.syncMode.queue;\n    }\n\n    initialize() {\n        assert(!this._released, `Library \"${ this.path }\" has already been released.`);\n        if (this._initialized) {\n            return;\n        }\n        this._pLib = native.dynload.loadLibrary(this.path);\n        this._loop = native.callback.newLoop();\n        if (this.options.syncMode === defs.syncMode.lock) {\n            this._mutex = native.mutex.newMutex();\n            a&&ert(this._mutex instanceof Buffer);\n        }\n        this._initialized = true;\n        return this;\n    }\n\n    release() {\n        if (!this._initialized) {\n            return;\n        }\n        if (this._released) {\n            return;\n        }\n        for (const func of _.values(this.functions)) {\n            func.release();\n        }\n        native.callback.freeLoop(this._loop);\n        native.dynload.freeLibrary(this._pLib);\n        this._released = true;\n        return this;\n    }\n\n    isSymbolExists(name) {\n        assert(_.isString(name), 'Argument is not a string.');\n\n        this.initialize();\n        return Boolean(native.dynload.findSymbol(this._pLib, name));\n    }\n\n    declare(str) {\n        return new Parser(this).parseMultiline(str, null);\n    }\n\n    declareSync(str) {\n        return new Parser(this).parseMultiline(str, defs.callMode.sync);\n    }\n\n    declareAsync(str) {\n        return new Parser(this).parseMultiline(str, defs.callMode.async);\n    }\n\n    function(def) {\n        return this.options.defaultCallMode === defs.callMode.sync ?\n            this.syncFunction(def) :\n            this.asyncFunction(def);\n    }\n\n    syncFunction(def) {\n        this._addFunction(new FastFunction(this, def, defs.callMode.sync));\n        return this;\n    }\n\n    asyncFunction(def) {\n        this._addFunction(new FastFunction(this, def, defs.callMode.async));\n        return this;\n    }\n\n    callback(def) {\n        this._addCallback(new FastCallback(this, def));\n        return this;\n    }\n\n    struct(def) {\n        this._addStruct(new FastStruct(this, def));\n        return this;\n    }\n\n    union(def) {\n        this._addUnion(new FastUnion(this, def));\n        return this;\n    }\n\n    array(def) {\n        this._addArray(new FastArray(this, def));\n        return this;\n    }\n\n    findRefDeclaration(type) {\n        assert(_.isString(type), 'Argument is not a string.');\n        return this.structs[type] || this.unions[type] || this.arrays[type] || null;\n    }\n\n    _addFunction(func) {\n        assert(!this.functions[func.name], `Function ${ func.name } already declared.`);\n        this.initialize();\n        func.initialize();\n        this.functions[func.name] = func;\n        this.interface[func.name] = func.getFunction();\n    }\n\n    _addCallback(cb) {\n        assert(!this.callbacks[cb.name], `Callback ${ cb.name } already declared.`);\n        this.initialize();\n        cb.initialize();\n        this.callbacks[cb.name] = cb;\n        this.interface[cb.name] = cb.getFactory();\n    }\n\n    _addStruct(struct) {\n        assert(!this.structs[struct.name], `Union ${ struct.name } already declared.`);\n        this.initialize();\n        this.structs[struct.name] = struct;\n        this.interface[struct.name] = struct.getFactory();\n    }\n\n    _addUnion(union) {\n        assert(!this.unions[union.name], `Union ${ union.name } already declared.`);\n        this.initialize();\n        this.unions[union.name] = union;\n        this.interface[union.name] = union.getFactory();\n    }\n\n    _addArray(array) {\n        assert(!this.arrays[array.name], `Array ${ array.name } already declared.`);\n        this.initialize();\n        this.arrays[array.name] = array;\n        this.interface[array.name] = array.getFactory();\n    }\n\n    _lock() {\n        native.mutex.lock(this._mutex);\n    }\n\n    _unlock() {\n        native.mutex.unlock(this._mutex);\n    }\n\n    _assertQueueEmpty() {\n        assert(!queue.length, 'Calling functions synchronously is forbidden while there are asynchronous functions enqueued.');\n    }\n\n    _enqueue(f) {\n        return queue.next(f);\n    }\n\n    makeName(prefix) {\n        return this._nameFactory.makeName(prefix);\n    }\n\n    static get callMode() {\n        return defs.callMode;\n    }\n\n    static get syncMode() {\n        return defs.syncMode;\n    }\n\n    static find(moduleDir, name) {\n        return doFind(moduleDir, name);\n    }\n}\n\nmodule.exports = Library;\n\nvar doFind = async(function* (moduleDir, name) {\n    assert(_.isString(moduleDir), 'Agument is not a string.');\n\n    const rootDir = path.join(moduleDir, 'build');\n    const libPath =\n        (yield findIn(rootDir, 'Debug', name)) ||\n        (yield findIn(rootDir, 'Release', name));\n    if (!libPath) {\n        throw new Error(`${ name } library not found.`);\n    }\n    return libPath;\n});\n\nvar findIn = async(function* (rootDir, subDir, name) {\n    const dir = path.join(rootDir, subDir);\n    let files;\n    try {\n        files = yield fs.readdirAsync(dir);\n    }\n    catch (err) {\n        return null;\n    }\n    const rex = new RegExp(name);\n    for (const file of files) {\n        if (rex.test(file)) {\n            return path.join(dir, file);\n        }\n    }\n    return null;\n});"]}