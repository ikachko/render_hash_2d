{"version":3,"sources":["../../../test/suites/declare.js"],"names":["fastcall","require","Library","helpers","assert","_","ref","Promise","async","coroutine","describe","libPath","lib","before","findTestlib","afterEach","release","declaration","it","declare","testSyncInterface","testRefInterface","defaultCallMode","callMode","declareSync","testAsyncInterface","sync","declareAsync","isFunction","interface","mul","isObject","function","strictEqual","functions","equal","toString","makeInt","TMakeIntFunc","callback","callbacks","result","fv","dv","Math","floor","TFloats","array","arrays","name","buff","isBuffer","length","types","float","size","TStuff","struct","structs","rec","type","more","get","T42","union","unions","uni","v1"],"mappings":"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","file":"declare.js","sourcesContent":["/*\nCopyright 2016 Gábor Mező (gabor.mezo@outlook.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n'use strict';\nconst fastcall = require('../../lib');\nconst Library = fastcall.Library;\nconst helpers = require('./helpers');\nconst assert = require('assert');\nconst _ = require('lodash');\nconst ref = fastcall.ref;\nconst Promise = require('bluebird');\nconst async = Promise.coroutine;\n\ndescribe(`Library.declare()`, function () {\n    let libPath = null;\n    let lib = null;\n    before(async(function* () {\n        libPath = yield helpers.findTestlib();\n    }));\n\n    afterEach(function () {\n        lib.release();\n    });\n\n    const declaration = \n        'int mul( int value, int by );' +\n        'int (*TMakeIntFunc)(float fv, double);' +\n        'int makeInt(float , double dv, TMakeIntFunc func);' +\n        'float[] TFloats;' +\n        'struct TStuff { TFloats more; };' +\n        'union T42 { int v1; double v2 };'\n\n    describe('sync', function () {\n        it('should declare stuff as sync by default', function () {\n            lib = new Library(libPath);\n            lib.declare(declaration);\n            testSyncInterface();\n            testRefInterface();\n        });\n\n        it('should declare stuff as sync if options.callMode is different', function () {\n            lib = new Library(libPath, { defaultCallMode: Library.callMode.async });\n            lib.declareSync(declaration);\n            testSyncInterface();\n            testRefInterface();\n        });\n    });\n\n    describe('async', function () {\n        it('should declare stuff as async by default if options.callMode is async', async(function* () {\n            lib = new Library(libPath, { defaultCallMode: Library.callMode.async });\n            lib.declare(declaration);\n            yield testAsyncInterface();\n            testRefInterface();\n        }));\n\n        it('should declare stuff as async if options.callMode is different', async(function* () {\n            lib = new Library(libPath, { defaultCallMode: Library.callMode.sync });\n            lib.declareAsync(declaration);\n            yield testAsyncInterface();\n            testRefInterface();\n        }));\n    });\n\n    function testSyncInterface() {\n        assert(_.isFunction(lib.interface.mul));\n        assert(_.isObject(lib.interface.mul.function));\n        assert.strictEqual(lib.interface.mul.function, lib.functions.mul);\n        assert.equal(lib.interface.mul.function.toString(), 'int mul(int value, int by)');\n\n        assert.equal(lib.interface.mul(2, 2), 4);\n\n        assert(_.isFunction(lib.interface.makeInt));\n        assert(_.isObject(lib.interface.makeInt.function));\n        assert.strictEqual(lib.interface.makeInt.function, lib.functions.makeInt);\n        assert.equal(lib.interface.makeInt.function.toString(), 'int makeInt(float arg0, double dv, TMakeIntFunc func)');\n        assert(_.isFunction(lib.interface.TMakeIntFunc));\n        assert(_.isObject(lib.interface.TMakeIntFunc.callback));\n        assert.strictEqual(lib.interface.TMakeIntFunc.callback, lib.callbacks.TMakeIntFunc);\n        assert.equal(lib.interface.TMakeIntFunc.callback.toString(), 'int TMakeIntFunc(float fv, double arg1)');\n\n        let result = lib.interface.makeInt(1.1, 2.2, (fv, dv) => fv + dv);\n        assert.equal(result, Math.floor((1.1 + 2.2) * 2));\n    }\n\n    var testAsyncInterface = async(function* () {\n        assert(_.isFunction(lib.interface.mul));\n        assert(_.isObject(lib.interface.mul.function));\n        assert.strictEqual(lib.interface.mul.function, lib.functions.mul);\n        assert.equal(lib.interface.mul.function.toString(), 'int mul(int value, int by)');\n\n        assert.equal(yield lib.interface.mul(2, 2), 4);\n\n        assert(_.isFunction(lib.interface.makeInt));\n        assert(_.isObject(lib.interface.makeInt.function));\n        assert.strictEqual(lib.interface.makeInt.function, lib.functions.makeInt);\n        assert.equal(lib.interface.makeInt.function.toString(), 'int makeInt(float arg0, double dv, TMakeIntFunc func)');\n        assert(_.isFunction(lib.interface.TMakeIntFunc));\n        assert(_.isObject(lib.interface.TMakeIntFunc.callback));\n        assert.strictEqual(lib.interface.TMakeIntFunc.callback, lib.callbacks.TMakeIntFunc);\n        assert.equal(lib.interface.TMakeIntFunc.callback.toString(), 'int TMakeIntFunc(float fv, double arg1)');\n\n        let result = yield lib.interface.makeInt(1.1, 2.2, (fv, dv) => fv + dv);\n        assert.equal(result, Math.floor((1.1 + 2.2) * 2));\n    });\n\n    function testRefInterface() {\n        assert(_.isFunction(lib.interface.TFloats));\n        assert(_.isObject(lib.interface.TFloats.array));\n        assert.strictEqual(lib.interface.TFloats.array, lib.arrays.TFloats);\n        assert.equal(lib.interface.TFloats.array.name, 'TFloats');\n        let buff = lib.interface.TFloats([1, 2, 3]);\n        assert(_.isBuffer(buff));\n        assert.equal(buff.length, 3 * ref.types.float.size);\n\n        assert(_.isFunction(lib.interface.TStuff));\n        assert(_.isObject(lib.interface.TStuff.struct));\n        assert.strictEqual(lib.interface.TStuff.struct, lib.structs.TStuff);\n        assert.equal(lib.interface.TStuff.struct.name, 'TStuff');\n        let rec = lib.structs.TStuff.type({ more: [1, 2, 3, 4] });\n        assert.strictEqual(rec.more, rec.more);\n        assert.equal(rec.more.get(0), 1);\n        assert.equal(rec.more.get(1), 2);\n        assert.equal(rec.more.get(2), 3);\n        assert.equal(rec.more.get(3), 4);\n        assert.equal(rec.more.length, 4);\n\n        assert(_.isFunction(lib.interface.T42));\n        assert(_.isObject(lib.interface.T42.union));\n        assert.strictEqual(lib.interface.T42.union, lib.unions.T42);\n        assert.equal(lib.interface.T42.union.name, 'T42');\n        let uni = lib.unions.T42.type({ v1: 42 });\n        assert.strictEqual(uni.v1, uni.v1);\n        assert.equal(uni.v1, 42);\n    }\n});"]}